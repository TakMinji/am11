/* 
relative : 적용시 띄어지지않음. = 일반 block과 동일한 상태 
(margin, padding영향 다 받는거..)
좌표가 들어가는 순간 위로 뜸

absolute : 적용과 동시에 뜸. 좌표가 입력되지 않으면 그 상태 그대로 위치함. / 좌표가 들어가면 이동시작
(부모 relative를 찾음. = 부모의 부모..자기가 속해있는 상위관계 다 찾음 / 형제관계 X / 만약 없으면 최종 browser의 기준좌표로(좌측 상단) 작동)


fixed : 적용과 동시에 뜸. 무조건 browser의 기준 좌표로만 작동됨. 
browser scroll의 영향을 받지않음(고정)

* absolute와 fixed는 position 적용하는 순간 display : block이여도 너비가 상실되어서 width : 100%를 따로 줘야함 !!
*/

/* 
    * 특정 규칙을 세워놓고 쓸 것)
    - 정말 특별한 상황일 때 아니면 relative에게 좌표를 주지 않음.
    - 최대한 부모 relative에 자손 0을 쓸 수 있는 상황을 만들 것 
    - absolute에게 브라우저 기준으로 움직일 수 있는 상황을 막음 
*/
#wrap{
    position: relative; width: 300px; height: 200px; background-color: gray; 
    margin: 0 auto; overflow-y: scroll; 
    /* left: 30px; top: 80px; */

}
#wrap div{
    position: absolute; width: 150px; height: 150px;
}
/* 자기가 있던 위치 기준에서 left : 30px top : 80px 좌표를 주면 0 outo 적용된 상태에서 움직임 */
#wrap .redBox{
    background-color: #f00; left: 10px; top: 10px; z-index: 100;
}
#wrap .greenBox{
    background-color: #0c0; left: 50px; top: 50px; z-index: 1;
}
#wrap .blueBox{
    background-color: #39f; left: 90px; top: 90px; z-index: 10;
}
/* z-index : 우선순위 바꿀 수 있음 / 선생님은 4단계로 나눠서 씀 
1, 10, 100, 1000 >>  본인이 규칙을 세워서 쓰면 됨 / 숫자가 올라갈수록 우선순위를 뺏음 */ 