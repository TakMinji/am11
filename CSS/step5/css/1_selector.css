
.tagSelector h1{color:#0c0; font-size:20px;}
.tagSelector p{color:#0cf; font-size:15px;}
.tagSelector span{color:#336; font-size:13px;}

/*태그선택자 사용법*/

.idSelector p#paragraph1{font-size:16px; text-decoration:underline;}
.idSelector p#paragraph2{color:#09F; text-decoration:line-through;}
.idSelector p#paragraph3{font-weight:bold; text-decoration:overline;}

/*ID선택자 사용법*/

.classSelector p.f_size{font-size:20px;}
.classSelector p.f_weight{font-weight:bold;}
.classSelector p.f_color{color:#9cf;}

/*CLASS 선택자 사용법 + 다중 클래스 지정 */

.attrSelector fieldset{
    border: 1px solid #555; background-color: slateblue;
    border-radius: 30px 0 30px;
}
.attrSelector fieldset legend{
    border: 1px solid slateblue; background-color: #555; color: white;
    padding: 10px; border-radius: 10px 0 10px;
}
.attrSelector fieldset ul{
    margin: 0; padding: 0; list-style: none;
}
.attrSelector fieldset ul li{
    font-size: 14px; color: white; line-height: 30px;
}
.attrSelector fieldset ul li label:not([for$='Ex']){
    width: 100px; display: inline-block;
}
/* 
▲ label중에 for값이 끝이 Ex로 끝나는 애들을 뺀 나머지를 의미함 
▲ not은 부정문
$ >> 뒤를 의미함, 해석하면 뒤에 텍스트가 EX로 끝나는애들 
*/
.attrSelector fieldset ul li input[type="text"]{
    background-color: salmon; border: 3px solid lightpink; color: maroon;
}
/* 
▲ [type=""] 지정 선택자 
"", '' 홑.쌍따음표 둘다 가능함
"" - 쌍따음표는 홑따음표를 품을 수 있어서 문자를 여러개 쓸 때 
     >>>>  ex) "'text''submit'" 
'' - 홑따음표는 한개만 지정해서 쓸 수 있음 
*/
.attrSelector fieldset ul li input[type="password"]{
    background-color: lightgreen; border: 3px solid lime; color: forestgreen;
}
.attrSelector fieldset ul li input input[type='radio']{
    background-color: black; border: 5px solid yellow;
}
.attrSelector fieldset ul li input input[type='checkbox']{
    background-color: black; color: 5px solid yellowgreen;
}
.directSelector > h1{
    font-size: 22px; color: #66f;
}
/* directSeletor class의 직계 h1 */
.directSelector > span{
    font-size: 18px; color: #906;
}
/* 
span을 여러번 쓴 잘못된 구조로 인해 직계는 정상적으로 작동했지만 다 바뀌어버림 
실무에서는 버블링, 버블이펙트 현상이라고 함.
*/
.sameSelector h1~h2{
    background-color: #333;
}
/*
 ▲ 동위선택자 : 동일한 구조에 있는 애들 선택하는 것 
*/
/* 
같은 공간 내에서 h1을 기준으로 이하에 있는 모든 애들 선택하는 것 
*/
.sameSelector h1+h2{
    font-size: 40px; color: #fcf;
}
/* 
h1 바로 뒤에있는 h2 선택하는 것, ~보다 +를 자주씀 
*/
.stringAttrSelector img[src$='png']{
    width: 100px; border: 3px solid red;
}
.stringAttrSelector img[src$='jpg']{
    width: 200px; border: 5px solid green;
}
.stringAttrSelector img[src$='gif']{
    width: 300px; border: 10px solid blue;
}
/* $ >> 맨 뒤를 의미함 */
.stringAttrSelector h1[title*='제목']{
    color: red;
}
/* 중앙 */
.stringAttrSelector h1[title^="남자"]{
    color: blue;
}
/* ^ >> 맨 앞을 의미함, 캐럿 */
.stringAttrSelector h1[title|="탈의실"]{
    color: deeppink;
}
/* shift + 원화표시 키 */

.stringAttrSelector img[src$='gif']{
    width: 300px; border: 10px solid blue;
}
.stringAttrSelector h1[title*='제목']{
    color: red;
}
.stringAttrSelector h1[title^="남자"]{
    color: blue;
}
.stringAttrSelector h1[title|="탈의실"]{
    color: deeppink;
}
.eventSelector{
    margin-bottom: 50px;
}
.eventSelector a{
    display: block; margin-bottom: 20px;
}
.eventSelector a:link{ /* ? 대상:link가 걸린 상태 = href attr을 지닌 상태. */
    color: red; background-color: black; text-decoration: none;
}
.eventSelector a:hover{ /* ? 대상: mouse cursor가 올라간 상태. */
    color: black; background-color: red; text-decoration: underline;
}
.eventSelector a:active{ /* ? 대상:click이 일어났을때*/
    color: red; background-color: white; text-decoration: line-through;
}
.eventSelector a:visited{ /* ? 대상:을 방문한 적이 있는 상태 / 배경은 cursor를 올렸을 때 / 기존 선행속성들 영향을 받음*/
    color: gray; background-color: white;
    /* border: 1px solid gray; */
}
.eventSelector a:focus{ /* 대상: 에 초점이 맞춰진 상태 */
    border: 5px solid deeppink;
}
/* focus 쓸 때 웹접근성 고대비 홈페이지 추천 */
.statusSelector input[type='checkbox'] + label{
    line-height: 20px; display: inline-block; transition: all .75s ease-out;
}
/* overflow는 감추기만 할 뿐 공간은 존재함 */
.statusSelector input[type='checkbox']:checked + label{
    line-height: 0px; 
    font-size: 0;
}
/* 
input(또는 select)이 check가 된 상황 선택자 >> :checked 
label이 check되면 사라지게 만드는 상황임 
*/



